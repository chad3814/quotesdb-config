name: PR Environment Management

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  create-pr-environment:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate environment name
        id: env-name
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
          echo "url=https://pr-${PR_NUMBER}.quotesdb.dev" >> $GITHUB_OUTPUT
      
      - name: Create database branch
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          echo "Creating database branch for PR #${{ github.event.pull_request.number }}"
          # Add database branching logic here (e.g., Supabase branching API)
      
      - name: Deploy PR environment
        run: |
          echo "Deploying PR environment: ${{ steps.env-name.outputs.name }}"
          echo "URL: ${{ steps.env-name.outputs.url }}"
          # Add deployment logic here
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ **PR Environment Ready!**\n\nYour temporary environment has been deployed:\n- URL: ${{ steps.env-name.outputs.url }}\n- Database: Branched from staging'
            })
  
  cleanup-pr-environment:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Generate environment name
        id: env-name
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
      
      - name: Remove database branch
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          echo "Removing database branch for PR #${{ github.event.pull_request.number }}"
          # Add database cleanup logic here
      
      - name: Destroy PR environment
        run: |
          echo "Destroying PR environment: ${{ steps.env-name.outputs.name }}"
          # Add cleanup logic here