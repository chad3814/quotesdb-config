# Job template for restoring PostgreSQL from backup
# To use: kubectl create -f restore-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-restore
  namespace: postgres
  labels:
    app: postgres
    component: restore
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: postgres-restore
        image: postgres:16-alpine
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Starting restore process..."
          
          # Set backup file to restore (modify this)
          BACKUP_FILE="${BACKUP_FILE:-/backup/quotesdb-latest.sql.gz}"
          
          if [ ! -f "$BACKUP_FILE" ]; then
            echo "Backup file not found: $BACKUP_FILE"
            exit 1
          fi
          
          echo "Restoring from: $BACKUP_FILE"
          
          # Drop existing connections
          PGPASSWORD=$POSTGRES_PASSWORD psql \
            -h postgres-service \
            -U $POSTGRES_USER \
            -d postgres \
            -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$POSTGRES_DB' AND pid <> pg_backend_pid();"
          
          # Restore the backup
          gunzip -c $BACKUP_FILE | PGPASSWORD=$POSTGRES_PASSWORD psql \
            -h postgres-service \
            -U $POSTGRES_USER \
            -d $POSTGRES_DB \
            --set ON_ERROR_STOP=on \
            --verbose
          
          echo "Restore completed successfully"
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: BACKUP_FILE
          value: "/backup/quotesdb-latest.sql.gz"  # Change this to your backup file
        volumeMounts:
        - name: backup-storage
          mountPath: /backup
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: postgres-backup-pvc